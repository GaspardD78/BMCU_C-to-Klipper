name: Release Artifacts

on:
  push:
    tags:
      - 'v*'

jobs:
  create-release-artifacts:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install Python dependencies
        run: |
          python3 -m pip install --upgrade pip
          python3 -m pip install -r matrix_flow/requirements.txt

      - name: Build firmware
        id: build
        run: |
          # Run the MatrixFlow workflow to build the firmware
          python3 -m matrix_flow.run_workflow

          # Find the compiled binary and store its path
          FIRMWARE_PATH=$(find matrix_flow/.cache/klipper/out -name "klipper.bin" -type f)
          if [ -z "$FIRMWARE_PATH" ]; then
            echo "::error::klipper.bin not found after build!"
            exit 1
          fi
          echo "firmware_path=$FIRMWARE_PATH" >> $GITHUB_ENV

      - name: Get version from tag
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

      - name: Create release package
        run: |
          set -eu
          # Create a directory for the release files
          mkdir -p release_packages manual_flash_pkg

          # Create the Manual Flash package, which contains the firmware binary.
          # This is the primary artifact for end-users.
          cp "${{ env.firmware_path }}" manual_flash_pkg/klipper.bin
          echo "Release notes for ${{ env.VERSION }}" > manual_flash_pkg/release_notes.md
          zip -r release_packages/BMCU_Manual_Flash-${{ env.VERSION }}.zip manual_flash_pkg/

          # NOTE: The previous version of this workflow also created a 'Klipper_Addon'
          # and an 'Auto_Flash_Tool' zip. These are now obsolete with MatrixFlow:
          # - The 'addon/' directory has been removed from the project.
          # - MatrixFlow is not designed as a distributable all-in-one tool,
          #   so the auto-flash package is no longer applicable.

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload Firmware Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./release_packages/BMCU_Manual_Flash-${{ env.VERSION }}.zip
          asset_name: BMCU_Manual_Flash-${{ env.VERSION }}.zip
          asset_content_type: application/zip
